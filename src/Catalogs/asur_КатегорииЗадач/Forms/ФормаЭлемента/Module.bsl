
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.СимволРазделения_ПоУмолчанию) Тогда
		Объект.СимволРазделения_ПоУмолчанию = РегистрыСведений.asur_ОбщиеНастройки.СоздатьМенеджерЗаписи().СимволРазделения_ПоУмолчанию;	
	КонецЕсли; 
	//	ДатаНачалаВеденияИстории = ТекущаяДатаСеанса();
	//	Автор = Пользователи.ТекущийПользователь();
	
	Если Параметры.Свойство("ОбъектМетаданных") Тогда
		Объект.ОбъектМетаданных = Параметры.ОбъектМетаданных;
		//ОбъектМетаданных = ТипОбъектаМетаданных.ЗначениеПустойСсылки;
	КонецЕсли; 
	
	ТипыДляПрефикса = Метаданные.РегистрыСведений.asur_ПрефиксыОбъектов.Измерения.Объект.Тип;
	
	ЗаполнитьСписокиРеквизитов();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы

&НаКлиенте
Процедура СтруктураФормированияКодаРазработчикуПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.СтруктураФормированияКодаРазработчику.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ЕстьПрефикс Тогда
		Элементы.СтруктураФормированияКодаРазработчикуЗначениеИзПрефикса.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.СтруктураФормированияКодаРазработчикуЗначениеИзПрефикса.ТолькоПросмотр = Истина;			
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура СформироватьЗапросДляКода(Команда)
	ЗаполнитьЗапросИСтрокуДляКода();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗапросИСтрокуДляКода()
	Объект.ЗапросСбораДанныхДляКода = "";
	Объект.ЗапросСбораДанныхДляКода = СформироватьТекстЗапроса(Объект.СтруктураФормированияКодаРазработчику,"ЗначениеИзПрефикса")
	+
		 "
		|	;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.НомерСтроки КАК НомерСтроки,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ИмяРеквизитаОбъекта КАК ИмяРеквизитаОбъекта,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.СинонимРеквизитаОбъекта КАК СинонимРеквизитаОбъекта,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ЕстьПрефикс КАК ЕстьПрефикс,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ЗначениеИзПрефикса КАК ЗначениеИзПрефикса,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ПутьКДанным КАК ПутьКДанным,
		|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.СимволРазделения КАК СимволРазделения
		|ИЗ
		|	ВТ_СписокЗадач КАК ВТ_СписокЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.asur_КатегорииЗадач.СтруктураФормированияКодаРазработчику КАК asur_КатегорииЗадачСтруктураФормированияКодаРазработчику
		|		ПО ВТ_СписокЗадач.КатегорияЗадачи = asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.Ссылка

		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки ";
	
	Если Объект.ЗапросСбораДанныхДляКода = "" Тогда
		Возврат;
	КонецЕсли; 
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	ЗАпрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = Объект.ЗапросСбораДанныхДляКода;
		//"ВЫБРАТЬ
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.Ссылка КАК Ссылка,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.НомерСтроки КАК НомерСтроки,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ЕстьПрефикс КАК ЕстьПрефикс,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ЗначениеИзПрефикса КАК ЗначениеИзПрефикса,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ИмяРеквизитаОбъекта КАК ИмяРеквизитаОбъекта,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.ПутьКДанным КАК ПутьКДанным,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.СимволРазделения КАК СимволРазделения,
		//|	asur_КатегорииЗадачСтруктураФормированияКодаРазработчику.СинонимРеквизитаОбъекта КАК СинонимРеквизитаОбъекта
		//|ИЗ
		//|	Справочник.asur_КатегорииЗадач.СтруктураФормированияКодаРазработчику КАК asur_КатегорииЗадачСтруктураФормированияКодаРазработчику";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.ОбъектМетаданных);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВДЗ = МВТ.Таблицы.Найти("ВТ_СписокЗадач").ПолучитьДанные().Выбрать();
	//Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			
	КонецЦикла;
	МВТ.Закрыть();
	
КонецПроцедуры
 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьСписокиРеквизитов()
//	ЗаполнитьСписокВыбранныхРеквизитов();
	ЗаполнитьСписокДоступныхРеквизитов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхРеквизитов()
	
	СписокРеквизитов.Очистить();
	
	//Стандартные Реквизиты
	Для каждого Реквизит Из Объект.ОбъектМетаданных.Метаданные().СтандартныеРеквизиты Цикл
		ИмяРеквизита = Реквизит.Имя;
		
		//Выводить Справочника: наименование , код 
		//Выводить Документа: Дата , Номер 
		//Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.ОбъектМетаданных)) Тогда
		Если Метаданные.Справочники.Содержит(Объект.ОбъектМетаданных.Метаданные()) Тогда
			Если ИмяРеквизита = "Код" ИЛИ ИмяРеквизита = "Наименование"  Тогда
				ДобавитьСтрокуСпискаРеквизитов(Реквизит);
			КонецЕсли
		//ИначеЕсли  Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.ОбъектМетаданных))  Тогда
		ИначеЕсли  Метаданные.Документы.Содержит(Объект.ОбъектМетаданных.Метаданные())  Тогда
			Если ИмяРеквизита = "Дата" ИЛИ ИмяРеквизита = "Номер"  Тогда
				ДобавитьСтрокуСпискаРеквизитов(Реквизит);
			КонецЕсли
		КонецЕсли; 
		
	КонецЦикла; 
	
	//Добавленные реквизиты
	Для каждого Реквизит Из Объект.ОбъектМетаданных.Метаданные().Реквизиты Цикл
		ДобавитьСтрокуСпискаРеквизитов(Реквизит);
	КонецЦикла; 
	
	ЗаполнитьЗначенияСпискаРеквизитов(СписокРеквизитов);
	
	СписокРеквизитов.Сортировать("ИмяРеквизитаОбъекта");
	
	СобратьСтрокуКода()

КонецПроцедуры

&НаСервере
Функция СформироватьТекстЗапроса(Знач ТаблицаФормы, ИмяРеквизитаПрефикса)
	
	ТекстЗапросаПрефикса = "";
	ТекстЗапросаСоединенияПрефикса = "";
	ТекстЗапроса =
		"ВЫБРАТЬ 
		| ТекОбъект.КатегорияЗадачи КАК КатегорияЗадачи, " + Символы.ПС;
	//КолСтрок = СписокРеквизитов.Количество(); 
	
	Для каждого Стр  Из ТаблицаФормы Цикл
		Если Стр.ИмяРеквизитаОбъекта = "КатегорияЗадачи" Тогда
		 	Продолжить;
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса +
		" ТекОбъект." + Стр.ИмяРеквизитаОбъекта + " КАК " + Стр.ИмяРеквизитаОбъекта + "," + Символы.ПС;
		
		Если Стр[ИмяРеквизитаПрефикса] Тогда
			ИмяПоля = Стр.ИмяРеквизитаОбъекта + "_Префикс";
			ТекстЗапросаПрефикса = ТекстЗапросаПрефикса + 
		"	ЕСТЬNULL(" + ИмяПоля + ".Префикс, """") КАК " + ИмяПоля + "," + Символы.ПС;

			ТекстЗапросаСоединенияПрефикса = ТекстЗапросаСоединенияПрефикса + Символы.ПС +
		"		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.asur_ПрефиксыОбъектов КАК "+ ИмяПоля + " 
			|  	ПО ТекОбъект." + Стр.ИмяРеквизитаОбъекта + " = " + ИмяПоля + ".Объект" + Символы.ПС;

		КонецЕсли; 
		
	КонецЦикла; 
	
	ТекстЗапроса =  ТекстЗапроса + ТекстЗапросаПрефикса;
	
	//Убираю последнюю запятую	
	ТекстЗапроса =  Сред(ТекстЗапроса,1,СтрДлина(ТекстЗапроса)-2) + Символы.ПС;
	
	//Помещаю во Временную Талицу ВТ_СписокЗадач
	ТекстЗапроса = ТекстЗапроса +  " ПОМЕСТИТЬ  ВТ_СписокЗадач" + Символы.ПС; 
	
	ТекстЗапроса = ТекстЗапроса + 
		"ИЗ
		|	Справочник.asur_СписокЗадач КАК ТекОбъект " + Символы.ПС 
		+  ТекстЗапросаСоединенияПрефикса + Символы.ПС +  
		"ГДЕ
		|	ТекОбъект.Ссылка = &Ссылка";
	Возврат ТекстЗапроса;
	
КонецФункции
	
	
&НаСервере
Процедура ЗаполнитьЗначенияСпискаРеквизитов(ТаблицаФормы)
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	ЗАпрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = СформироватьТекстЗапроса(ТаблицаФормы, "ЕстьПрефикс");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.ОбъектМетаданных);
	Запрос.Выполнить();
	
	
	ВДЗ = МВТ.Таблицы.Найти("ВТ_СписокЗадач").ПолучитьДанные().Выбрать();
	
	Если ВДЗ.Следующий() Тогда
		Для каждого Стр Из ТаблицаФормы Цикл
			Стр.Значение = ВДЗ[Стр.ИмяРеквизитаОбъекта];
			Если Стр.ЕстьПрефикс Тогда
				Стр.ЗначениеПрефикса = ВДЗ[Стр.ИмяРеквизитаОбъекта + "_Префикс"];
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	МВТ.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуСпискаРеквизитов(Реквизит)
	ИмяРеквизита = Реквизит.Имя;
	
	//не выводить реквизиты которые будут удалять
	Если СтрНайти(ИмяРеквизита,"Удалить") Тогда
		Возврат;
		//Не выводить уже выбранные реквизиты
//	ИначеЕсли 	ВыбранныеРеквизиты.НайтиСтроки(Новый Структура("ИмяРеквизитаОбъекта", ИмяРеквизита)).Количество() > 0 Тогда 
//		Возврат;
	КонецЕсли;
	
	Строка = СписокРеквизитов.Добавить();
	Строка.ИмяРеквизитаОбъекта     = ИмяРеквизита;
	Строка.СинонимРеквизитаОбъекта = Реквизит.Синоним;
	Строка.ЕстьПрефикс = ТипыДляПрефикса.СодержитТип(ТипЗнч(Объект.ОбъектМетаданных[ИмяРеквизита]));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элемент.ТекущиеДанные;
	СтрПоиска = Новый Структура("ИмяРеквизитаОбъекта", ТекДанные.ИмяРеквизитаОбъекта);
	
	Если НЕ Объект.СтруктураФормированияКодаРазработчику.НайтиСтроки(СтрПоиска).Количество() > 0 Тогда
		НовСтр = Объект.СтруктураФормированияКодаРазработчику.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекДанные);
		Возврат;
	КонецЕсли; 
	
	СобратьСтрокуКода();

КонецПроцедуры

&НаСервере
Процедура СобратьСтрокуКода()
	СтрокаДляКода = "";
	Для каждого Стр Из  Объект.СтруктураФормированияКодаРазработчику Цикл
		//Если Стр.ЗначениеИзПрефикса Тогда
		//	ЗначениеСтроки = 
		//Иначе	
		//
		//КонецЕсли; 
		СтрокаДляКода = СтрокаДляКода + Стр.Значение; 	
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

#КонецОбласти
